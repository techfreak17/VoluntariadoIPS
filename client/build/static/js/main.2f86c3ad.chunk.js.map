{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","Navbar","className","to","style","fontFamily","Component","Landing","height","width","borderRadius","letterSpacing","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","number","name","role","email","password","password2","props","registerUser","history","this","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","console","log","emailnotfound","passwordincorrect","setItem","jwt_decode","component","rest","render","Dashboard","onLogoutClick","split","onClick","jwtToken","currentTime","Date","now","exp","location","href","App","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2f86c3ad.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    GET_ERRORS,\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/api/users/register\", userData)\r\n        .then(res => history.push(\"/login\")) // re-direct to login on successful register\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n    axios\r\n        .post(\"/api/users/login\", userData)\r\n        .then(res => {\r\n\r\n            // Save to localStorage\r\n            // Set token to localStorage\r\n            const { token } = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n    return {\r\n        type: USER_LOADING\r\n    };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n    // Remove token from local storage\r\n    localStorage.removeItem(\"jwtToken\");\r\n\r\n    // Remove auth header for future requests\r\n    setAuthToken(false);\r\n    \r\n    // Set current user to empty object {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"../actions/types\";\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(\r\n        applyMiddleware(...middleware)\r\n    )\r\n);\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navbar-fixed\">\r\n                <nav className=\"z-depth-0\">\r\n                    <div className=\"nav-wrapper white\">\r\n                        \r\n                        <Link\r\n                            to=\"/\"\r\n                            style={{\r\n                                fontFamily: \"monospace\"\r\n                            }}\r\n                            className=\"col s5 brand-logo center black-text\">\r\n\r\n                            <i className=\"material-icons\">code</i>\r\n              MERN\r\n            </Link>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Navbar;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4>\r\n                            <b>Build</b> a login/auth app with the{\" \"}\r\n                            <span style={{ fontFamily: \"monospace\" }}>MERN</span>\r\n                            stack from scratch\r\n                        </h4>\r\n                        <p className=\"flow-text grey-text text-darken-1\">\r\n                            Create a (minimal) full-stack app with user authentication via\r\n                            passport and JWTs\r\n                        </p>\r\n                        <br />\r\n                        <div className=\"col s6\">\r\n                            <Link\r\n                                to=\"/register\"\r\n                                style={{\r\n                                    width: \"140px\",\r\n                                    borderRadius: \"3px\",\r\n                                    letterSpacing: \"1.5px\"\r\n                                }}\r\n                                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\r\n                                Register\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col s6\">\r\n                            <Link\r\n                                to=\"/login\"\r\n                                style={{\r\n                                    width: \"140px\",\r\n                                    borderRadius: \"3px\",\r\n                                    letterSpacing: \"1.5px\"\r\n                                }}\r\n                                className=\"btn btn-large btn-flat waves-effect white black-text\">\r\n                                Log In\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Landing;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            number: \"\",\r\n            name: \"\",\r\n            role: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Register page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            number: this.state.number,\r\n            name: this.state.name,\r\n            role: this.state.role,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n\r\n        this.props.registerUser(newUser, this.props.history);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s8 offset-s2\">\r\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                            <i className=\"material-icons left\">keyboard_backspace</i> \r\n                            Back to home\r\n                        </Link>\r\n                        \r\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                            <h4>\r\n                                <b>Register</b> \r\n                                below\r\n                            </h4>\r\n                            <p className=\"grey-text text-darken-1\">\r\n                                Already have an account? <Link to=\"/login\">Log in</Link>\r\n                            </p>\r\n                        </div>\r\n                        \r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            \r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.number}\r\n                                    error={errors.number}\r\n                                    id=\"number\"\r\n                                    type=\"number\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.number\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"number\">Número</label>\r\n                                <span className=\"red-text\">{errors.number}</span>\r\n                            </div>\r\n\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.name}\r\n                                    error={errors.name}\r\n                                    id=\"name\"\r\n                                    type=\"text\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.name\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"name\">Nome</label>\r\n                                <span className=\"red-text\">{errors.name}</span>\r\n                            </div>\r\n\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.role}\r\n                                    error={errors.role}\r\n                                    id=\"role\"\r\n                                    type=\"text\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.role\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"role\">Role</label>\r\n                                <span className=\"red-text\">{errors.role}</span>\r\n                            </div>\r\n                            \r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.email\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <span className=\"red-text\">{errors.email}</span>\r\n                            </div>\r\n                            \r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <span className=\"red-text\">{errors.password}</span>\r\n                            </div>\r\n                            \r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password2}\r\n                                    error={errors.password2}\r\n                                    id=\"password2\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password2\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"password2\">Confirm Password</label>\r\n                                <span className=\"red-text\">{errors.password2}</span>\r\n                            </div>\r\n                            \r\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                <button\r\n                                    style={{\r\n                                        width: \"150px\",\r\n                                        borderRadius: \"3px\",\r\n                                        letterSpacing: \"1.5px\",\r\n                                        marginTop: \"1rem\"\r\n                                    }}\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\r\n                                    Sign up\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n        }\r\n\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n        console.log(userData);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n                    <div className=\"col s8 offset-s2\">\r\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                            <i className=\"material-icons left\">keyboard_backspace</i>\r\n                            Back to home\r\n                        </Link>\r\n\r\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                            <h4>\r\n                                <b>Login</b>\r\n                                below\r\n                            </h4>\r\n\r\n                            <p className=\"grey-text text-darken-1\">\r\n                                Don't have an account? <Link to=\"/register\">Register</Link>\r\n                            </p>\r\n                        </div>\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.email || errors.emailnotfound\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <span className=\"red-text\">\r\n                                    {errors.email}\r\n                                    {errors.emailnotfound}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password || errors.passwordincorrect\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <span className=\"red-text\">\r\n                                    {errors.password}\r\n                                    {errors.passwordincorrect}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                <button\r\n                                    style={{\r\n                                        width: \"150px\",\r\n                                        borderRadius: \"3px\",\r\n                                        letterSpacing: \"1.5px\",\r\n                                        marginTop: \"1rem\"\r\n                                    }}\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\r\n                                    Login\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { loginUser }\r\n)(Login);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            auth.isAuthenticated === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                    <Redirect to=\"/login\" />\r\n                )\r\n        }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nclass Dashboard extends Component {\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    render() {\r\n\r\n        const { user } = this.props.auth;\r\n\r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4>\r\n                            <b>Hey there,</b> {user.name.split(\" \")[0]}\r\n                            <p className=\"flow-text grey-text text-darken-1\">\r\n                                You are logged into a full-stack{\" \"}\r\n                                <span style={{ fontFamily: \"monospace\" }}>MERN</span> app 👏\r\n                            </p>\r\n                        </h4>\r\n\r\n                        <button\r\n                            style={{\r\n                                width: \"150px\",\r\n                                borderRadius: \"3px\",\r\n                                letterSpacing: \"1.5px\",\r\n                                marginTop: \"1rem\"\r\n                            }}\r\n                            onClick={this.onLogoutClick}\r\n                            className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\r\n                            Logout\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n)(Dashboard);","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Landing from \"./components/layout/Landing\";\r\nimport Register from \"./components/auth/Register\";\r\nimport Login from \"./components/auth/Login\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}